generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(uuid())
  email                   String    @unique
  name                    String
  lastname                String?
  role                    Role      @default(ADOPTER)
  password                String
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  documentPath            String?
  password_reset_token    String?
  password_reset_experies DateTime?
  status                  Status
  ong                     Ong?      @relation("UserToOng")
  adopter                 Adopter?  @relation("UserToAdopter")
}

model Adopter {
  id       String @id @default(uuid())
  document String
  phone    String
  address  String
  zipcode  String
  state    String
  city     String

  user   User   @relation("UserToAdopter", fields: [userId], references: [id])
  userId String @unique
}

model Ong {
  id      String @id @default(uuid())
  name    String
  slug    String
  cnpj    String
  phone   String
  address String
  zipcode String
  state   String
  city    String
  
  user   User   @relation("UserToOng", fields: [userId], references: [id])
  userId String @unique
  articles Article[]
}

model Article {
  id String @id @default(uuid())
  title String
  slug String
  categorie String
  thumbnail String
  content   String  @db.Text 
  createdAt DateTime @default(now())  
  updatedAt DateTime @updatedAt
  ong Ong @relation(fields: [ongId], references: [id])
  ongId String
  sections   Section[]
}

model Section {
  id        String @id @default(uuid())
  articleId String
  title     String  // Subt√≠tulo
  content   String  @db.Text 
  quote String?
  image String? 
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
}


enum Role {
  ADMIN
  ADOPTER
  ONG
}

enum Status {
  ACTIVE
  INATIVE
  PENDING
}
